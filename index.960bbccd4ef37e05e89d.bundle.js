"use strict";(self.webpackChunkrunner_web_frontend=self.webpackChunkrunner_web_frontend||[]).push([[826,951,554],{5106:(n,t,e)=>{e.d(t,{Z:()=>o});const o={getSelectedLanguage:function(){const n=document.getElementById("lang-select");return n.options[n.selectedIndex].innerText},url:"https://runner.fly.dev/api/v1/",runEndpoint:"run",langEndpoint:"languages"}},323:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(5106);const s=function(){return new Promise((function(n,t){let e=new XMLHttpRequest;const s=o.Z.url+o.Z.langEndpoint;console.log("FULL URL LANG: ",s),e.open("GET",s),e.onload=function(){this.status>=200&&this.status<400?n(e.response):t({status:this.status,statusText:e.statusText})},e.onerror=function(){t({status:this.status,statusText:e.statusText})},e.send()}))}},9922:(n,t,e)=>{e(1380),e(4894),e(3443),e(9589),e(6876),e(5321),e(5619),e(198),e(9039),e(45),e(6952),e(1842),e(900),e(3122),e(8102),e(5289),e(8428),e(6989),e(7050),e(8819);var o=e(3379),s=e.n(o),A=e(7795),r=e.n(A),a=e(569),i=e.n(a),l=e(3565),d=e.n(l),u=e(9216),c=e.n(u),p=e(4589),g=e.n(p),B=e(7123),f={};f.styleTagTransform=g(),f.setAttributes=d(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=c(),s()(B.Z,f),B.Z&&B.Z.locals&&B.Z.locals;var m,C=e(7557),I=e(6862),x=e(323),h=e(5106);I.Z.setValue("def main():\n\tprint('Hello, World!')\n\nif __name__ == '__main__':\n\tmain()"),(0,x.Z)().then((function(n){var t=JSON.parse(n);m=t.languages})).catch((function(n){m=["Error!"],console.log("Error when fetching languages: "+n)})).finally((function(){var n=document.getElementById("lang-select");for(const e of m){var t=document.createElement("option");t.innerText=e,n.appendChild(t)}h.Z.getSelectedLanguage()})),document.getElementById("submit-btn").addEventListener("click",C.Z),document.getElementById("theme-select").addEventListener("change",(function(){const n=document.getElementById("theme-select");var t=n.options[n.selectedIndex].textContent;I.Z.setOption("theme",t)}))},7557:(n,t,e)=>{e.d(t,{Z:()=>A});var o=e(6862),s=e(5106);e(1380);const A=async function(){await new Promise((function(n,t){var e={source:o.Z.getValue(),language:s.Z.getSelectedLanguage()};let A=new XMLHttpRequest;const r=s.Z.url+s.Z.runEndpoint;A.open("POST",r),A.setRequestHeader("Content-Type","application/json"),A.onload=function(){this.status>=200&&this.status<400?n(A.response):t({status:this.status,statusText:A.statusText})},A.onerror=function(){t({status:this.status,statusText:A.statusText})},A.send(JSON.stringify(e))})).then((function(n){let t=JSON.parse(n);document.getElementById("stdout-field").innerHTML="Stdout: "+t.stdout.replace(/\n/g,"<br>"),document.getElementById("stderr-field").innerHTML="Stderr: "+t.stderr,document.getElementById("err-field").innerHTML="Error: "+t.error})).catch((function(n){console.log(n),document.getElementById("output-field").textContent="Error: "+n}))}},7123:(n,t,e)=>{e.d(t,{Z:()=>a});var o=e(7537),s=e.n(o),A=e(3645),r=e.n(A)()(s());r.push([n.id,".CodeMirror {\n    border: 4px solid gray;\n    margin: auto;\n    height: 500px;\n    font-size: 16px;\n    text-align: left; \n    text-shadow: none; \n}\n\nbutton {\n    font-weight: bold; \n    padding: 4px; \n    margin-top: 5px; \n}\n\n.selectors {\n    display: flex;\n    justify-content:space-between;\n}\n\nselect {\n\tfont-family: monospace;\n}\n\n#wrapper {\n    margin-top: 5%; \n}\n\nbody {\n    background-color: indigo; \n    text-align: center;\n    font-family: monospace; \n    color: white;\n}\n\na, a:visited {\n    color: gray; \n    font-weight: bold; \n}\n\nfooter {\n    font-style: italic;\n    font-size: 14px; \n    padding: 10px; \n}\n\n.output {\n    width: 60%;\n    margin-top: 10px; \n}\n\n.field {\n    background-color: skyblue; \n    border: 2px solid blue; \n    border-radius: 10px; \n    -moz-border-radius: 10px; \n    color: black; \n    margin: auto; \n    text-align: left; \n    padding: 5px; \n}\n\n.box {\n    width: 90%; \n}\n\n#wrapper {\n    width: 50%;\n    margin: auto;\n}\n","",{version:3,sources:["webpack://./style/main.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,eAAe;IACf,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,6BAA6B;AACjC;;AAEA;CACC,sBAAsB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,wBAAwB;IACxB,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;IACzB,sBAAsB;IACtB,mBAAmB;IACnB,wBAAwB;IACxB,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,UAAU;IACV,YAAY;AAChB",sourcesContent:[".CodeMirror {\n    border: 4px solid gray;\n    margin: auto;\n    height: 500px;\n    font-size: 16px;\n    text-align: left; \n    text-shadow: none; \n}\n\nbutton {\n    font-weight: bold; \n    padding: 4px; \n    margin-top: 5px; \n}\n\n.selectors {\n    display: flex;\n    justify-content:space-between;\n}\n\nselect {\n\tfont-family: monospace;\n}\n\n#wrapper {\n    margin-top: 5%; \n}\n\nbody {\n    background-color: indigo; \n    text-align: center;\n    font-family: monospace; \n    color: white;\n}\n\na, a:visited {\n    color: gray; \n    font-weight: bold; \n}\n\nfooter {\n    font-style: italic;\n    font-size: 14px; \n    padding: 10px; \n}\n\n.output {\n    width: 60%;\n    margin-top: 10px; \n}\n\n.field {\n    background-color: skyblue; \n    border: 2px solid blue; \n    border-radius: 10px; \n    -moz-border-radius: 10px; \n    color: black; \n    margin: auto; \n    text-align: left; \n    padding: 5px; \n}\n\n.box {\n    width: 90%; \n}\n\n#wrapper {\n    width: 50%;\n    margin: auto;\n}\n"],sourceRoot:""}]);const a=r}},n=>{n.O(0,[380,7,631],(()=>(9922,n(n.s=9922)))),n.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,