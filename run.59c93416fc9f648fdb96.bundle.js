"use strict";(self.webpackChunkrunner_web_frontend=self.webpackChunkrunner_web_frontend||[]).push([[382],{3535:(e,t,n)=>{n.d(t,{A:()=>c});const r={local:{url:"http://localhost:10100/api/v1/",name:"Local Development",description:"Local development server"},staging:{url:"https://runner-staging.fly.dev/api/v1/",name:"Staging",description:"Pre-production testing environment"},production:{url:"https://runner.fly.dev/api/v1/",name:"Production",description:"Live production environment"}};let o="production";function s(){const e=document.getElementById("env-select");return e?e.value:"staging"}function i(e){if(r[e]){o=e;const t=document.getElementById("env-select");t&&(t.value=e),u.url=r[e].url,u.environment=e;const n=new CustomEvent("environmentChanged",{detail:{environment:e,config:r[e]}});document.dispatchEvent(n)}}const u={getSelectedLanguage:function(){const e=document.getElementById("lang-select");return e.options[e.selectedIndex].innerText},get url(){return function(){const e=s();return r[e]||r.production}().url},runEndpoint:"run",langEndpoint:"languages",get environment(){return s()},setEnvironment:i,getSelectedEnvironment:s,initializeEnvironment:function(){i("staging");const e=document.getElementById("env-select");e&&e.addEventListener("change",(function(){i(this.value)}))},environments:r},c=u},9360:(e,t,n)=>{n.d(t,{A:()=>s});var r=n(8964),o=n(3535);n(875);const s=async function(){let e=document.getElementById("stdout-field"),t=document.getElementById("stderr-field"),n=document.getElementById("err-field");await new Promise((function(e,t){var n={source:r.A.getValue(),language:o.A.getSelectedLanguage()};let s=new XMLHttpRequest;const i=o.A.url+o.A.runEndpoint;s.open("POST",i),s.setRequestHeader("Content-Type","application/json"),s.onload=function(){this.status>=200&&this.status<400?e(s.response):t({status:this.status,statusText:s.statusText,body:s.response})},s.onerror=function(){t({status:this.status,statusText:s.statusText,body:s.response})},s.send(JSON.stringify(n))})).then((function(r){let o=JSON.parse(r);e.innerHTML="<pre>Stdout: "+o.stdout+"</pre>",e.removeAttribute("hidden"),t.innerHTML="<pre>Stderr: "+o.stderr+"</pre>",t.removeAttribute("hidden"),n.innerHTML="<pre>Error: "+o.error+"</pre>"})).catch((function(r){console.log(r),e.setAttribute("hidden",!0),t.setAttribute("hidden",!0),n.innerHTML="<pre>Error: "+function(e){const t="none";if(null===e)return t;let n="";const r=Object.keys(e);return r.forEach(((t,o)=>{null!==e[t]&&(n+=t+": "+String(e[t]),o<r.length-1&&(n+=", "))})),""==n&&(n=t),n}(r)+"</pre>"}))}}},e=>{e.O(0,[875,237],(()=>e(e.s=9360))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,